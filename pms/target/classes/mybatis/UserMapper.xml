<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.teacheredu.mapping.UserMapper">
<!-- <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/> -->
	<cache type = "org.mybatis.caches.memcached.MemcachedCache"/>
	<!-- <cache type = "org.mybatis.caches.memcached.LoggingMemcachedCache" /> -->
  <resultMap id="BaseResultMap" type="cn.teacheredu.entity.UserEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="login_name" jdbcType="VARCHAR" property="loginName" />
    <result column="password" jdbcType="VARCHAR" property="password" />
    <result column="dm_id" jdbcType="INTEGER" property="dmId" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="realname" jdbcType="VARCHAR" property="realname" />
    <result column="sex" jdbcType="CHAR" property="sex" />
    <result column="idcard" jdbcType="VARCHAR" property="idcard" />
    <result column="mobile" jdbcType="VARCHAR" property="mobile" />
    <result column="email" jdbcType="VARCHAR" property="email" />
    <result column="pic" jdbcType="VARCHAR" property="pic" />
    <result column="note" jdbcType="VARCHAR" property="note" />
    <result column="gen_time" jdbcType="TIMESTAMP" property="genTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="available" jdbcType="INTEGER" property="available" />
    <result column="delete_time" jdbcType="TIMESTAMP" property="deleteTime" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <if test="loginName != null">
        and login_name = #{loginName,jdbcType=VARCHAR}
      </if>
      <if test="password != null">
        and password = #{password,jdbcType=VARCHAR}
      </if>
      <if test="dmId != null">
        and dm_id = #{dmId,jdbcType=INTEGER}
      </if>
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="realname != null">
        and realname = #{realname,jdbcType=VARCHAR}
      </if>
      <if test="sex != null">
        and sex = #{sex,jdbcType=CHAR}
      </if>
      <if test="idcard != null">
        and idcard = #{idcard,jdbcType=VARCHAR}
      </if>
      <if test="mobile != null">
        and mobile = #{mobile,jdbcType=VARCHAR}
      </if>
      <if test="email != null">
        and email = #{email,jdbcType=VARCHAR}
      </if>
      <if test="pic != null">
        and pic = #{pic,jdbcType=VARCHAR}
      </if>
      <if test="note != null">
        and note = #{note,jdbcType=VARCHAR}
      </if>
      <if test="genTime != null">
        and gen_time = #{genTime,jdbcType=TIMESTAMP}
      </if>
      <if test="updateTime != null">
        and update_time = #{updateTime,jdbcType=TIMESTAMP}
      </if>
      <if test="available != null">
        and available = #{available,jdbcType=INTEGER}
      </if>
      <if test="deleteTime != null">
        and delete_time = #{deleteTime,jdbcType=TIMESTAMP}
      </if>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id, login_name, password, dm_id, role_id, realname, sex, idcard, mobile, email, pic, 
    note, gen_time, update_time, available, delete_time
  </sql>
  <select id="selectByExample" parameterType="cn.teacheredu.vo.UserQueryVo" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderProperty != null">
      order by ${orderProperty} ${orderType}
    </if>
    <if test="isPaged == true">
		limit #{startPosition} ,#{pageSize}
	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where id = #{id,jdbcType=INTEGER}
  </select>
  
  <select id="getUserListByDmId" parameterType="java.lang.Integer" resultMap="BaseResultMap" useCache="false" flushCache="true">
    select u.id, login_name, password, u.dm_id, role_id, realname, sex, idcard, mobile, email, pic, 
    u.note, gen_time, update_time, available, delete_time from user u left join user_department ud on u.id = ud.user_id 
    where ud.dm_id = #{dmId,jdbcType=INTEGER}
  </select>
  
  <select id="selectByLoginName" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from user
    where login_name = #{loginName,jdbcType=VARCHAR}
  </select>
  
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from user
    where id = #{id,jdbcType=INTEGER}
  </delete>
  
  <insert id="insertSelective" parameterType="cn.teacheredu.entity.UserEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        login_name,
      </if>
      <if test="password != null">
        password,
      </if>
      <if test="dmId != null">
        dm_id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="realname != null">
        realname,
      </if>
      <if test="sex != null">
        sex,
      </if>
      <if test="idcard != null">
        idcard,
      </if>
      <if test="mobile != null">
        mobile,
      </if>
      <if test="email != null">
        email,
      </if>
      <if test="pic != null">
        pic,
      </if>
      <if test="note != null">
        note,
      </if>
      <if test="genTime != null">
        gen_time,
      </if>
      <if test="updateTime != null">
        update_time,
      </if>
      <if test="available != null">
        available,
      </if>
      <if test="deleteTime != null">
        delete_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="loginName != null">
        #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        #{password,jdbcType=VARCHAR},
      </if>
      <if test="dmId != null">
        #{dmId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        #{sex,jdbcType=CHAR},
      </if>
      <if test="idcard != null">
        #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        #{email,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        #{pic,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        #{note,jdbcType=VARCHAR},
      </if>
      <if test="genTime != null">
        #{genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null">
        #{available,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.teacheredu.vo.UserQueryVo" resultType="java.lang.Long">
    select count(*) from user
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>

 
  <update id="updateByPrimaryKeySelective" parameterType="cn.teacheredu.entity.UserEntity">
    update user
    <set>
      <if test="loginName != null">
        login_name = #{loginName,jdbcType=VARCHAR},
      </if>
      <if test="password != null">
        password = #{password,jdbcType=VARCHAR},
      </if>
      <if test="dmId != null">
        dm_id = #{dmId,jdbcType=INTEGER},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="realname != null">
        realname = #{realname,jdbcType=VARCHAR},
      </if>
      <if test="sex != null">
        sex = #{sex,jdbcType=CHAR},
      </if>
      <if test="idcard != null">
        idcard = #{idcard,jdbcType=VARCHAR},
      </if>
      <if test="mobile != null">
        mobile = #{mobile,jdbcType=VARCHAR},
      </if>
      <if test="email != null">
        email = #{email,jdbcType=VARCHAR},
      </if>
      <if test="pic != null">
        pic = #{pic,jdbcType=VARCHAR},
      </if>
      <if test="note != null">
        note = #{note,jdbcType=VARCHAR},
      </if>
      <if test="genTime != null">
        gen_time = #{genTime,jdbcType=TIMESTAMP},
      </if>
      <if test="updateTime != null">
        update_time = #{updateTime,jdbcType=TIMESTAMP},
      </if>
      <if test="available != null">
        available = #{available,jdbcType=INTEGER},
      </if>
      <if test="deleteTime != null">
        delete_time = #{deleteTime,jdbcType=TIMESTAMP},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
	
	
	<update id="updateProcessNameByUserId" parameterType="map">
		update process set create_user_name = #{name,jdbcType=VARCHAR} 
			where create_user_id = #{userId};
	</update>
	<update id="updateNeedProcessNameByUserId" parameterType="map">
		update need_deal_process set create_user_name = #{name,jdbcType=VARCHAR} 
			where create_user_id = #{userId};
	</update>
</mapper>