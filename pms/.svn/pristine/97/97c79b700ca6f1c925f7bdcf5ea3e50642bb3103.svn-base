<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.teacheredu.mapping.RoleMenuMapper">
<cache type = "org.mybatis.caches.memcached.MemcachedCache"/>
<!-- <cache eviction="FIFO" flushInterval="60000" size="512" readOnly="true"/> -->
  <resultMap id="BaseResultMap" type="cn.teacheredu.entity.RoleMenuEntity">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="role_id" jdbcType="INTEGER" property="roleId" />
    <result column="menu_id" jdbcType="INTEGER" property="menuId" />
    <result column="pm_type" jdbcType="INTEGER" property="pmType" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <if test="roleId != null">
        and role_id = #{roleId,jdbcType=INTEGER}
      </if>
      <if test="menuId != null">
        and menu_id = #{menuId,jdbcType=INTEGER}
      </if> 
      <if test="pmType != null">
        and pm_type = #{pmType,jdbcType=INTEGER}
      </if>
    </where>
  </sql>
  
  <sql id="Base_Column_List">
    id, role_id, menu_id, pm_type
  </sql>
  <select id="selectByExample" parameterType="cn.teacheredu.vo.RoleMenuQueryVo" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from role_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderProperty != null">
      	order by ${orderProperty} ${orderType}
    </if>
    <if test="isPaged == true">
		limit #{startPosition} ,#{pageSize}
	</if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from role_menu
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from role_menu
    where id = #{id,jdbcType=INTEGER}
  </delete>
   <delete id="deleteByRoleId" parameterType="java.lang.Integer">
    delete from role_menu
    where role_id = #{roleId,jdbcType=INTEGER}
  </delete>
  <insert id="saveRoleMenu" parameterType="java.util.Map">
		insert into role_menu
		(
			`role_id`, 
			`menu_id`
		)
		values
		<foreach collection="menuIdList" item="item" index="index" separator="," >
		(
			#{roleId,jdbcType=INTEGER}, 
			#{item,jdbcType=INTEGER} 
		)
		</foreach>
	</insert>
	
  <select id="queryMenuIdList"  parameterType="java.lang.Integer" resultType="int">
		select menu_id from role_menu where role_id = #{roleId,jdbcType=INTEGER}
  </select>
  
  <insert id="insertSelective" parameterType="cn.teacheredu.entity.RoleMenuEntity">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Integer">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into role_menu
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        role_id,
      </if>
      <if test="menuId != null">
        menu_id,
      </if>
      <if test="pmType != null">
        pm_type,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="roleId != null">
        #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null">
        #{menuId,jdbcType=INTEGER},
      </if>
      <if test="pmType != null">
        #{pmType,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="cn.teacheredu.vo.RoleMenuQueryVo" resultType="java.lang.Long">
    select count(*) from role_menu
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  
  <update id="updateByPrimaryKeySelective" parameterType="cn.teacheredu.entity.RoleMenuEntity">
    update role_menu
    <set>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=INTEGER},
      </if>
      <if test="menuId != null">
        menu_id = #{menuId,jdbcType=INTEGER},
      </if>
      <if test="pmType != null">
        pm_type = #{pmType,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  
</mapper>